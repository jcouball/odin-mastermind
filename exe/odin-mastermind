#!/usr/bin/env ruby
# frozen_string_literal: true

require 'odin/mastermind'

def user_input(prompt)
  print "#{prompt} "
  gets.chomp.downcase
end

def valid_type?(type)
  %w[maker breaker].include?(type)
end

def user_type
  puts 'Do you want to be the Code Maker or the Code Breaker?'
  Enumerator.produce { user_input('Enter Maker or Breaker: ') }.find { |t| valid_type?(t) }
end

config = Odin::Mastermind::Configuration.new(code_length: 4, value_range: 0..5, max_turns: 12)
game_io = Odin::Mastermind::CommandLineIO.new(stdout: $stdout, stdin: $stdin, config:)
if user_type == 'maker'
  code_maker = Odin::Mastermind::HumanPlayer.new(name: 'Human', config:, game_io:)
  code_breaker = Odin::Mastermind::ComputerPlayer.new(name: 'Computer', config:)
else
  code_maker = Odin::Mastermind::ComputerPlayer.new(name: 'Computer', config:)
  code_breaker = Odin::Mastermind::HumanPlayer.new(name: 'Human', config:, game_io:)
end
game_engine = Odin::Mastermind::GameEngine.new(code_maker:, code_breaker:, config:, game_io:)

game_engine.run
